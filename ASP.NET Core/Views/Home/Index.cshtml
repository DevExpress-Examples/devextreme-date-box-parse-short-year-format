@using ASP_NET_Core

<style>
    #grid {
        margin-top: 50px;
    }
</style>

@(Html.DevExtreme().SelectBox()
    .Value("javascript")
    .ID("parse-behavior")
    .ValueExpr("Value")
    .DisplayExpr("Text")
    .DataSource(d => d
        .Mvc()
        .Controller("SampleData")
        .LoadAction("GetSelectBoxItems")
        .Key("Value")
     )
)

@(Html.DevExtreme().DateBox()
    .Value(DateTime.Now)
    .DisplayFormat(new JS("displayFormat"))
    .Type(DateBoxType.Date)
    .Label("Date with the short year")

)

@(Html.DevExtreme().DataGrid<Employee>()
    .ID("grid")
    .ShowBorders(true)
    .DataSource(d => d.Mvc().Controller("SampleData").LoadAction("Get").Key("ID").UpdateAction("Put"))
    .Columns(columns => {
        columns.AddFor(m => m.FirstName);
        columns.AddFor(m => m.LastName);
        columns.AddFor(m => m.BirthDate).EditorOptions(new {displayFormat = new JS("displayFormat")});
    })
    .Paging(p => p.PageSize(10))
    .Editing(e =>
    {
        e.AllowUpdating(true);
        e.Mode(GridEditMode.Cell);
    })
    .RemoteOperations(true)
)


<script>
    function parser(value) {
        const parseSelectBox = $('#parse-behavior').dxSelectBox('instance');

        const algorithm = parseSelectBox.option('value');
        const resultDate = new Date(value);

        if (algorithm === 'javascript') { return resultDate; }

        const parts = value.split('/');
        if (parts.length !== 3) { return value; }

        let year = Number(parts[2]);
        if (year < 100) {
            year = getFourDigitYear(year, algorithm);
            resultDate.setFullYear(year);
        }
        return resultDate;
    }

    function getFourDigitYear(twoDigitYear, algorithm) {
        const now = new Date();
        const yearToday = now.getFullYear();
        const centuryToday = yearToday - (yearToday % 100);
        let fullYear = centuryToday + twoDigitYear;

        if (algorithm === 'nocutoff') { return fullYear; }

        let currentCenturyCutOff = yearToday;
        if (algorithm === 'excel') {
            const nextDecadeStart = yearToday - (yearToday % 10) + 10;
            currentCenturyCutOff = nextDecadeStart - 1;
        }
        if (fullYear > currentCenturyCutOff) { fullYear -= 100; }

        return fullYear;
    }

    const formatter = (value) => value.toLocaleDateString();

    const displayFormat = {
        parser: (val) => parser(val),
        formatter: (val) => formatter(val),
    };

</script>

